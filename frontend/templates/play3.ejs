=
<!doctype html>
<html lang="en">

<head>
    <!--====== Required meta tags ======-->
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="Interactive fitness game where you dodge obstacles with real-life movements">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!--====== Title ======-->
    <title>Motion Dodge - Fitness Game</title>

    <!--====== Favicon Icon ======-->
    <link rel="icon" href="assets/images/favicon.png" type="image/png">

    <!--====== Bootstrap css ======-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <!--====== Font Awesome ======-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <!--====== Custom CSS ======-->
    <style>
        :root {
            --primary-color: #4ECDC4;
            --secondary-color: #FF6B6B;
            --dark-color: #292F36;
            --light-color: #F7FFF7;
            --accent-color: #FFE66D;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--dark-color);
            color: var(--light-color);
            overflow-x: hidden;
        }

        .navbar {
            background: rgba(41, 47, 54, 0.9);
            backdrop-filter: blur(10px);
            padding: 15px 0;
            transition: all 0.3s ease;
        }

        .navbar.scrolled {
            padding: 10px 0;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand img {
            height: 40px;
        }

        .nav-link {
            color: var(--light-color) !important;
            font-weight: 500;
            margin: 0 10px;
            position: relative;
        }

        .nav-link:after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: 0;
            left: 0;
            background-color: var(--primary-color);
            transition: width 0.3s ease;
        }

        .nav-link:hover:after {
            width: 100%;
        }

        .hero-section {
            min-height: 100vh;
            display: flex;
            align-items: center;
            background: linear-gradient(135deg, rgba(78, 205, 196, 0.2), rgba(255, 107, 107, 0.2)),
                url('assets/images/ftiness.avif') no-repeat center center;
            background-size: cover;
            position: relative;
            padding: 120px 0 80px;
        }

        .hero-content {
            max-width: 800px;
            margin: 0 auto;
            text-align: center;
            z-index: 2;
        }

        .hero-title {
            font-size: 3.5rem;
            font-weight: 700;
            margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
            background: linear-gradient(to right, var(--primary-color), var(--accent-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .hero-subtitle {
            font-size: 1.5rem;
            margin-bottom: 30px;
            opacity: 0.9;
        }

        .cta-button {
            display: inline-block;
            padding: 12px 30px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            border-radius: 50px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            transition: all 0.3s ease;
            border: none;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            text-decoration: none;
        }

        .cta-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
            color: white;
        }

        .game-container {
            padding: 80px 0;
            background-color: var(--dark-color);
        }

        .game-wrapper {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 30px;
        }

        .game-title {
            font-size: 2.5rem;
            margin-bottom: 20px;
            text-align: center;
            color: var(--accent-color);
        }

        .game-description {
            max-width: 800px;
            margin: 0 auto 40px;
            text-align: center;
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .game-area {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 30px;
            width: 100%;
        }

        .game-screen {
            position: relative;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 800px;
            aspect-ratio: 16/9;
            background-color: #000;
        }

        #gameCanvas {
            width: 100%;
            height: 100%;
            display: block;
        }

        .video-feed {
            position: relative;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 400px;
            aspect-ratio: 4/3;
            background-color: #000;
        }

        #videoElement {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transform: scaleX(-1);
        }

        .controls {
            display: flex;
            flex-direction: column;
            gap: 20px;
            width: 100%;
            max-width: 400px;
        }

        .control-button {
            padding: 15px 25px;
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 8px;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        #startButton {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
        }

        #startButton:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

        #resetButton {
            background-color: transparent;
            border: 2px solid var(--secondary-color);
            color: var(--secondary-color);
        }

        #resetButton:hover {
            background-color: var(--secondary-color);
            color: white;
        }

        .score-display {
            background-color: rgba(41, 47, 54, 0.7);
            padding: 15px 25px;
            border-radius: 8px;
            text-align: center;
            font-size: 1.2rem;
            font-weight: 600;
        }

        .score-value {
            color: var(--accent-color);
            font-size: 1.5rem;
        }

        .instructions {
            background-color: rgba(41, 47, 54, 0.7);
            padding: 20px;
            border-radius: 10px;
            margin-top: 30px;
            border-left: 4px solid var(--primary-color);
        }

        .instructions h3 {
            color: var(--primary-color);
            margin-bottom: 15px;
        }

        .instructions ul {
            padding-left: 20px;
        }

        .instructions li {
            margin-bottom: 10px;
        }

        .motion-feedback {
            position: absolute;
            bottom: 20px;
            left: 20px;
            background-color: rgba(0, 0, 0, 0.7);
            color: white;
            padding: 10px 15px;
            border-radius: 5px;
            font-size: 0.9rem;
            display: none;
        }

        .footer {
            background-color: #1E2329;
            padding: 40px 0 20px;
            text-align: center;
        }

        .footer-logo img {
            height: 50px;
            margin-bottom: 20px;
        }

        .social-icons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin: 20px 0;
        }

        .social-icons a {
            color: var(--light-color);
            font-size: 1.5rem;
            transition: all 0.3s ease;
        }

        .social-icons a:hover {
            color: var(--primary-color);
            transform: translateY(-3px);
        }

        .copyright {
            opacity: 0.7;
            font-size: 0.9rem;
        }

        /* Responsive adjustments */
        @media (max-width: 992px) {
            .hero-title {
                font-size: 2.8rem;
            }

            .hero-subtitle {
                font-size: 1.2rem;
            }

            .game-area {
                flex-direction: column;
                align-items: center;
            }
        }

        @media (max-width: 768px) {
            .hero-title {
                font-size: 2.2rem;
            }

            .game-title {
                font-size: 2rem;
            }

            .video-feed,
            .controls {
                max-width: 100%;
            }
        }

        @media (max-width: 576px) {
            .hero-title {
                font-size: 1.8rem;
            }

            .hero-subtitle {
                font-size: 1rem;
            }

            .cta-button {
                padding: 10px 20px;
                font-size: 0.9rem;
            }

            .control-button {
                padding: 12px 20px;
                font-size: 1rem;
            }
        }
    </style>

    <!-- IMPROVED WARNING FILTER SCRIPT - MUST COME BEFORE ANY CONTENT LOADS -->
    <script>
        // This will filter out Scratch monitor warnings and Canvas2D warnings
        (function () {
            // Store the original console functions
            const originalWarn = console.warn;
            const originalError = console.error;

            // Override console.warn to filter out specific warnings
            console.warn = function () {
                // Check if this is a Scratch sprite monitor warning
                if (arguments[0] &&
                    typeof arguments[0] === 'string' &&
                    (arguments[0].includes('Tried to deserialize sprite specific monitor') ||
                        arguments[0].includes('vm'))) {
                    // Skip logging these warnings
                    return;
                }

                // Pass through all other warnings to the original function
                originalWarn.apply(console, arguments);
            };

            // Override console.error to filter Canvas2D warnings
            console.error = function () {
                // Filter Canvas2D willReadFrequently warnings
                if (arguments[0] &&
                    typeof arguments[0] === 'string' &&
                    arguments[0].includes('Canvas2D')) {
                    return;
                }

                // Pass through all other errors
                originalError.apply(console, arguments);
            };
        })();
    </script>
</head>

<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="assets/images/logo.png" alt="Motion Dodge Logo">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <i class="fas fa-bars" style="color: white;"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/games">Games</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#instructions">Instructions</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#about">About</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <section id="home" class="hero-section">
        <div class="container">
            <div class="hero-content">
                <h1 class="hero-title">Yoga Master</h1>
                <p class="hero-subtitle" style="font-weight: 700; color: black;">Follow the Move: Match Every Exercise
                    Before the Next One Begins!</p>
                <a href="#game" class="cta-button">Play Now</a>
            </div>
        </div>
    </section>

    <!-- Game Section -->
    <section id="game" class="game-container">
        <div class="container">
            <h2 class="game-title">Yoga Master</h2>
            <p class="game-description" style="color: #4ECDC4;">
                Follow the on-screen trainer and copy each exercise move accurately.
                A new exercise will appear after each completed move, keeping you on your toes!
            </p>

            <div class="game-wrapper">
                <div class="game-area">
                    <div class="game-screen" style="max-width: 800px; height: 500px;">
                        <!-- IFRAME with name attribute to allow communication -->
                        <iframe src="https://scratch.mit.edu/projects/911482074/embed" allowtransparency="true"
                            width="800" height="500" frameborder="0" scrolling="no" allowfullscreen></iframe>
                    </div>

                    <div class="controls">
                        <div class="video-feed">
                            <video autoplay playsinline muted id="videoElement"></video>
                        </div>
                        <button class="control-button" id="startButton">Start Game</button>
                        <button class="control-button" id="resetButton">Reset</button>
                        <div class="score-display">
                            Score: <span class="score-value" id="scoreValue">0</span>
                        </div>
                    </div>
                </div>

                <div class="instructions" id="instructions">
                    <h3>How To Play</h3>
                    <ul>
                        <li>Stand about 6 feet away from your camera</li>
                        <li>Make sure you're in a well-lit area</li>
                        <li>Watch the on-screen trainer carefully and mimic each exercise move.
                        </li>
                        <li> Once you complete an exercise, a new one will appear, so keep up and stay active!</li>

                    </ul>
                </div>
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section id="about" class="py-5 bg-dark">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 mx-auto text-center">
                    <h2 class="mb-4">Yoga Master</h2>
                    <p class="lead">
                        In this exercise game, your goal is to match the movements of the on-screen trainer as accurately as possible. Each time you successfully complete an exercise, a new one will appear, increasing the challenge and variety. Stay focused and keep up with the pace as the exercises get more dynamic. It’s a fun and interactive way to stay fit while improving coordination and fitness skills!
                    </p>
                    <p>
                        Using advanced motion detection technology, the game tracks your movements and translates
                        them into in-game actions. No special equipment needed - just your webcam and your body!
                    </p>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="footer-logo">
                <img src="assets/images/logo.png" alt="Motion Dodge Logo">
            </div>
            <div class="social-icons">
                <a href="https://x.com/MayankMittal06"><i class="fab fa-twitter"></i></a>
                <a href="https://www.facebook.com/mayank.mittal.1069020/"><i class="fab fa-facebook"></i></a>
                <a href="https://www.instagram.com/mayankmittal.1306/"><i class="fab fa-instagram"></i></a>
                <a href="https://www.linkedin.com/in/mayankmittal1311/"><i class="fab fa-linkedin"></i></a>
            </div>
            <p class="copyright">
                &copy; 2023 Yoga-Master. All rights reserved.<br>
                Made with <i class="fas fa-heart" style="color: #FF6B6B;"></i> by Constellation
            </p>
        </div>
    </footer>

    <!-- Improved Game Script with proper error handling -->
    <script>
        // Wait for DOM to be fully loaded
        document.addEventListener('DOMContentLoaded', function () {
            // Get elements
            const video = document.getElementById('videoElement');
            const startButton = document.getElementById('startButton');
            const resetButton = document.getElementById('resetButton');
            const scoreValue = document.getElementById('scoreValue');

            // Variables
            let score = 0;
            let mediaStream = null;
            let gameStarted = false;

            // Initialize audio context properly with error handling
            function initAudioContext() {
                try {
                    // Only create if it doesn't exist
                    if (!window.audioContext) {
                        const AudioContext = window.AudioContext || window.webkitAudioContext;
                        if (AudioContext) {
                            window.audioContext = new AudioContext();

                            // Check if context is in suspended state (autoplay policy)
                            if (window.audioContext.state === 'suspended') {
                                window.audioContext.resume().then(() => {
                                    console.log('AudioContext resumed successfully');
                                }).catch(err => {
                                    console.log('Failed to resume AudioContext:', err);
                                });
                            }
                        }
                    }
                    return window.audioContext;
                } catch (e) {
                    console.log('Audio context initialization skipped:', e);
                    return null;
                }
            }

            // Start button handler
            startButton.addEventListener('click', function () {
                if (!gameStarted) {
                    // Initialize audio after user interaction
                    initAudioContext();

                    // Start camera
                    startCamera();

                    // Start game (your game start code would go here)
                    gameStarted = true;
                    startButton.textContent = "Game Started";
                    startButton.disabled = true;

                    // Update score
                    score = 0;
                    updateScore();

                    console.log('Game started');
                }
            });

            // Camera function with error handling
            function startCamera() {
                if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                    navigator.mediaDevices.getUserMedia({
                        video: {
                            facingMode: 'user',
                            width: { ideal: 640 },
                            height: { ideal: 480 }
                        }
                    })
                        .then(function (stream) {
                            mediaStream = stream;
                            video.srcObject = stream;
                            video.play().catch(err => {
                                console.log('Video play error:', err);
                            });
                            // Your motion detection code would go here
                        })
                        .catch(function (error) {
                            console.log("Camera error:", error);
                            alert("Unable to access camera. Please check permissions and try again.");
                            startButton.disabled = false;
                            gameStarted = false;
                            // Handle fallback to keyboard controls if needed
                        });
                } else {
                    alert("Sorry, your browser doesn't support camera access. Try using a modern browser like Chrome or Firefox.");
                    startButton.disabled = false;
                    gameStarted = false;
                    // Handle fallback to keyboard controls if needed
                }
            }

            // Update score display
            function updateScore() {
                scoreValue.textContent = score;
            }

            // Reset button handler
            resetButton.addEventListener('click', function () {
                // Reset game state
                gameStarted = false;
                score = 0;
                updateScore();

                // Stop camera if it's running
                if (mediaStream) {
                    mediaStream.getTracks().forEach(track => {
                        track.stop();
                    });
                    mediaStream = null;
                    video.srcObject = null;
                }

                // Reset button states
                startButton.textContent = "Start Game";
                startButton.disabled = false;

                // You might need to reload or reset the Scratch game iframe here
                try {
                    const gameFrame = document.getElementById('game_frame');
                    const currentSrc = gameFrame.src;
                    gameFrame.src = '';
                    setTimeout(() => {
                        gameFrame.src = currentSrc;
                    }, 100);
                } catch (e) {
                    console.log('Error resetting game iframe:', e);
                }

                console.log('Game reset');
            });

            // Navbar scroll effect
            window.addEventListener('scroll', function () {
                const navbar = document.querySelector('.navbar');
                if (window.scrollY > 50) {
                    navbar.classList.add('scrolled');
                } else {
                    navbar.classList.remove('scrolled');
                }
            });

            // Smooth scrolling for anchor links
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const targetId = this.getAttribute('href');
                    if (targetId === '#') return;
                    const targetElement = document.querySelector(targetId);
                    if (targetElement) {
                        window.scrollTo({
                            top: targetElement.offsetTop - 70,
                            behavior: 'smooth'
                        });
                    }
                });
            });
        });
    </script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>